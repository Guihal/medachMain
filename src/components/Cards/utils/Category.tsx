export function Category({ post: post }) {
  const data = getCollectionTagData(post)

  return (
    <>
      <div
        style={{ borderColor: data.border, background: data.bg }}
        className="px-2 h-[30px] border-2 rounded-lg flex flex-center cursor-pointer font-helvetica"
      >
        <div
          style={{ background: data.border }}
          className="w-[10px] h-[10px] rounded-full m-0 mr-2 p-0"
        ></div>
        {data.text}
      </div>
      <EditorsChoiceTag post={post} />
    </>
  )
}

export function EditorsChoiceTag({ post: post }) {
  return post.editorsChoice ? (
    <div className="px-2 h-[30px] bg-white border-[#323232] border-2 rounded-lg flex flex-center cursor-pointer font-helvetica">
      <svg
        className="w-[18px] h-[16px] bg-white mr-[5px]"
        width="20"
        height="17"
        viewBox="0 0 20 17"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M9.70689 1.33207V2.71444C9.25376 2.68395 8.7836 2.57177 8.3418 2.34996C7.3654 1.85951 5.1146 1.80639 5.35079 4.22589C5.58726 6.64539 8.55645 6.2346 9.58541 6.08035C9.62519 6.07439 9.66575 6.06941 9.70689 6.06518V6.86776C9.62946 6.8612 9.54942 6.85691 9.46636 6.85533C7.46075 6.81659 7.50461 8.48289 7.90944 9.09342C8.16391 9.47722 8.81093 9.78302 9.70689 9.74327V10.5499C8.88631 10.7661 8.58704 11.2612 8.69185 11.8635C8.75791 12.2432 9.18472 12.5079 9.70689 12.5793V14.7299L2.24798 1.33207H9.70689ZM13.8475 2.07535C14.0636 2.07027 14.0835 2.35335 14.0835 2.35335C14.0835 2.35335 14.051 2.38951 13.947 2.38188C13.8427 2.37397 13.634 2.29685 13.6116 2.26351C13.5893 2.22989 13.6315 2.08075 13.8475 2.07535ZM10.4697 12.5457C10.8116 12.4682 11.1429 12.303 11.4011 12.0313C11.3442 12.0861 11.0427 12.3512 10.4697 12.4233V10.8346C11.1416 10.6558 11.8272 10.3279 11.8896 9.0776C11.8896 9.0776 13.8949 8.03764 12.8614 6.38999C12.3246 5.53412 11.3883 5.28683 10.4697 5.24231V3.78635C11.3022 3.68243 11.7961 3.35677 12.0779 3.23453C12.4347 3.07999 12.7268 3.32889 12.7592 3.40291C12.7916 3.47693 13.2855 4.13633 13.4572 4.16345C13.6288 4.19029 13.8429 4.13633 13.7263 3.92783C13.6942 3.87048 13.6533 3.8072 13.6103 3.73911C13.6484 3.73261 13.9584 3.68405 14.0682 3.76114C14.1851 3.84336 14.2529 4.1109 14.3701 4.13407C14.4872 4.15727 14.5987 4.0705 14.5987 4.0705C14.5987 4.0705 14.4148 4.14565 14.3535 4.0705C14.2922 3.99535 14.1696 3.69475 14.0189 3.66594C13.8702 3.63712 13.7048 3.70097 13.5067 3.56988C13.4277 3.43173 13.3585 3.28171 13.3406 3.12915C13.306 2.83533 13.4277 2.80397 13.6094 2.72317C13.6094 2.72317 13.1357 2.62909 13.0512 2.92517C12.9671 3.22125 13.155 3.50377 13.155 3.50377C13.155 3.50377 12.8567 3.24809 12.8502 2.86443C12.8437 2.48105 13.2201 2.50789 13.4405 2.51467C13.6612 2.52117 14.1091 2.60197 14.0377 2.87121C13.9685 3.13197 13.8751 3.32974 13.8693 3.34189C13.8821 3.32493 14.1878 2.915 14.2259 2.75679C14.2259 2.75679 14.3752 2.67599 14.3622 2.80397C14.3491 2.93167 14.2063 3.26165 14.1739 3.31533C14.1739 3.31533 14.4011 3.16051 14.4725 2.79041C14.4725 2.79041 14.7839 2.56835 14.6932 2.39347C14.6932 2.39347 14.6607 2.31945 14.4725 2.28583C14.2842 2.25221 14.2908 2.21859 14.2063 2.11067C14.1221 2.00305 13.9473 1.8903 13.4572 1.97703C13.4572 1.97703 13.2392 1.77927 12.9668 1.80752C12.6944 1.83577 11.9588 2.2313 11.196 2.51382C10.9787 2.59431 10.7328 2.65531 10.4697 2.69023V1.33207H17.9286L10.4697 14.7299V12.5457ZM9.70689 12.3885C8.89712 12.1759 8.89859 11.3637 9.5756 11.0773C9.61728 11.0596 9.66123 11.0436 9.70689 11.0285V12.3885ZM11.3189 9.34938C11.3189 9.34938 11.2821 10.122 10.4697 10.3938V9.63371C10.7389 9.56972 11.0228 9.47663 11.3189 9.34938ZM9.70689 9.11444C9.02903 9.15365 8.42841 8.87887 8.38755 8.40153C8.34186 7.86776 8.71171 7.43412 9.70689 7.51176V9.11444ZM11.2777 8.58488C11.2777 8.58488 10.9875 8.79296 10.4697 8.95837V7.73806C11.0203 8.05329 11.2777 8.58488 11.2777 8.58488ZM10.4697 6.07718C11.4299 6.19497 12.3818 6.68338 12.2293 7.44774C12.1163 8.01532 11.7507 8.22947 11.7507 8.22947C11.7507 8.22947 11.4863 7.40144 10.4697 7.0306V6.07718ZM9.70689 5.24384C9.14329 5.26799 8.63556 5.32879 8.29519 5.31811C7.27716 5.2859 6.58298 4.85421 6.50589 4.32618C6.42852 3.79815 6.61377 3.0625 7.58552 3.2382C8.55095 3.41302 8.58751 3.75945 9.70689 3.81316V5.24384ZM0.926758 0.541016L10.0883 16.9971L19.2498 0.541016H0.926758Z"
          fill="url(#paint0_linear_96_3084)"
        />
        <defs>
          <linearGradient
            id="paint0_linear_96_3084"
            x1="10.0883"
            y1="0.541016"
            x2="10.4417"
            y2="29.4159"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="#323232" />
            <stop offset="0.557646" stopColor="#323232" />
          </linearGradient>
        </defs>
      </svg>
      Выбор Редакции
    </div>
  ) : (
    <></>
  )
}

function getCollectionTagData(post) {
  switch (post.slugCollection) {
    case 'news':
      return {
        text: 'Новость',
        bg: '#bfdbfe',
        border: '#4d9bfd',
      }
    case 'articles':
      return {
        text: 'Статья',
        bg: '#f1baec',
        border: '#f83a95',
      }
    case 'videos':
      return {
        text: 'Видео',
        bg: '#ffafa9',
        border: '#f81717',
      }
    case 'vacancy':
      return {
        text: 'Вакансия',
        bg: '#89d7e0',
        border: '#008fa0',
      }
    case 'events':
      return {
        text: 'Мероприятие',
        bg: '#b7adf5',
        border: '#7b67f5',
      }
    case 'podcasts':
      return {
        text: 'Подкаст',
        bg: '#fde68a',
        border: '#ffb800',
      }
    case 'infographics':
      return {
        text: 'Инфографика',
        bg: '#d1ecc1',
        border: '#77c845',
      }
    default:
      return {
        text: 'Нету такого',
        bg: '#d1ecc1',
        border: '#77c845',
      }
  }
}
